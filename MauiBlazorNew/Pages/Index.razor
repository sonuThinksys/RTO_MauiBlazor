@page "/"
@using Azure.Communication.Identity;
@using Azure.Communication.CallAutomation;
@using System.Security.Cryptography;
@using System.Text;
@*if Platform.iOS
@using MauiBlazorNew.Platforms.iOS;*@
@*else*@
@using MauiBlazorNew.Platforms.Android;

<h1>RTO App</h1>

<button class="btn btn-primary" @onclick="OnButtonClicked">Join Call </button>

@code{
    IComposite callComposite = new Composite();
    bool isTeamsCall = false;

    const String groupCallTitle = "Group call ID";
    const String groupCallEntryPlaceholder = "Enter call ID";
    const String groupCallSubtitle = "Start a call to get a call ID.";

    const String teamsMeetingTitle = "Teams meeting";
    const String teamsMeetingEntryPlaceholder = "Enter invite link";
    const String teamsMeetingSubtitle = "Get link from the meeting invite or anyone in the call.";

    LocalizationProps _localization;
    DataModelInjectionProps _dataModelInjection;
    OrientationProps _orientationProps;
    CallControlProps _callControlProps;

    protected override async Task OnInitializedAsync()
    {
        _localization = new LocalizationProps();
        _localization.locale = "en";
        _localization.isLeftToRight = true;

        _orientationProps = new OrientationProps();
        _orientationProps.setupScreenOrientation = "PORTRAIT";
        _orientationProps.callScreenOrientation = "USER";

        _dataModelInjection = new DataModelInjectionProps();
        _dataModelInjection.localAvatar = "";
        _dataModelInjection.remoteAvatar = "";

        _callControlProps = new CallControlProps();
        _callControlProps.isSkipSetupON = false;
        _callControlProps.isMicrophoneON = false;
        _callControlProps.isCameraON = true;

    }

    public static Guid ToGuid(long value)
    {
        byte[] bytes = new byte[16];
        BitConverter.GetBytes(value).CopyTo(bytes, 0);
        return new Guid(bytes);
    }

    async void OnButtonClicked()
    {
        String connectionString = "endpoint=https://rto.unitedstates.communication.azure.com/;accesskey=FtEiGR3YjNYxcey/jgLCztE6+VUPMiceZGFJd1NUfQdYQwzef3G2Jq3hK4/teV40nV19+jGAZ6iSAW6sRLrMmA==";
        CommunicationIdentityClient client = new CommunicationIdentityClient(connectionString);
        var identityResponse = await client.CreateUserAsync();
        var identity = identityResponse.Value;
        var tokenResponse = await client.GetTokenAsync(identity, scopes: new[] { CommunicationTokenScope.VoIP });
        var token = tokenResponse.Value.Token;
        //var guid = new Guid("99428485578377964").ToString();
        if (!String.IsNullOrEmpty(token))
        {
            Console.WriteLine("token===========" + token);
            callComposite.joinCall("Sonu", token, ToGuid(99428485578377964).ToString(), false, _localization, _dataModelInjection, _orientationProps, _callControlProps);
        }
    }

}